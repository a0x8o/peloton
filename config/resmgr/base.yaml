storage:
  cassandra:
    max_parallel_batches: 1000
    max_updates_job: 10
    connection:
      contactPoints: ["127.0.0.1"]
      port: 9042
      consistency: LOCAL_QUORUM
      serialConsistency: LOCAL_SERIAL
      hostPolicy: TokenAwareHostPolicy
      # Need to increase timeout from 10s to 20s to avoid recovery code from timing out
      # We saw recovery code timing out when peloton was recovering from a
      # Cassandra latency spike issue.
      timeout: 20s
    store_name: peloton_test
    migrations: pkg/storage/cassandra/migrations/
  use_cassandra: true

resmgr:
  http_port: 5290
  grpc_port: 5394
  task_scheduling_period: 100ms
  entitlement_calculation_period: 60s
  task_reconciliation_period: 1h
  enable_host_scorer: false
  task:
    # Timeout for rm task in statemachine from placing to ready state
    placing_timeout: 10m
    # Timeout for rm task in statemachine from launching to ready state
    launching_timeout: 20m
    # Timeout for rm task in statemachine from preempting to running state
    preempting_timeout: 10m
    # Timeout for rm task in statemachine from reserved to pending state
    reserving_timeout: 30m
    # This is the backoff period how much it will backoff
    # in each cycle.
    placement_retry_backoff: 5m
    # This is number of cycles which placement is going to repeat and
    # unplaced tasks after that are qualified for host reservation.
    placement_retry_cycle: 3
    # This is number of retry attempts in each placement
    # retry cycle.
    placement_attempts_percycle: 3
    # This is the policy name for the backoff
    # which is going to dictate the backoff
    backoff_policy_name: exponential-policy
    # This flag enable/disable the placement backoff
    enable_placement_backoff: true
    # This flag will enable/disable host reservation of tasks
    enable_host_reservation: false
  preemption:
    task_preemption_period: 60s
    sustained_over_allocation_count: 5
    enabled: true
  host_drainer_period: 300s

election:
  root: "/peloton"

health:
  heartbeat_interval: 5s

metrics:
  runtime_metrics:
    enabled: true
    interval: 10s

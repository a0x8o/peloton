/**
 *  This file defines the Host related messages in Peloton API
 */

syntax = "proto3";

package peloton.api.v0.host;

import "peloton/api/v0/peloton.proto";

enum HostState {
    HOST_STATE_INVALID = 0;

    // Reserved for future compatibility of new states.
    HOST_STATE_UNKNOWN = 1;

    // The host is healthy
    HOST_STATE_UP = 2;

    // The tasks running on the host are being rescheduled.
    // There will be no further placement of tasks on the host
    HOST_STATE_DRAINING = 3;

    // There are no tasks running on the host and is ready to be put into maintenance.
    HOST_STATE_DRAINED = 4;

    // The host is in maintenance.
    HOST_STATE_DOWN = 5;
}

message HostInfo {
    // Hostname of the host
    string hostname = 1;

    // IP address of the host
    string ip = 2;

    // Current state of the host
    HostState state = 3;

    // Goal state of the host
    HostState goal_state = 4;

    // Host labels.
    repeated peloton.Label labels = 5;

   // Current host pool of the host
   string current_pool = 6;

   // Desired host pool of the host
   string desired_pool = 7;

}

/**
 * Events for host changes.
 */
message HostEvent {
    // Describes the type of host event.
    enum Type {
        // Invalid event type.
        TYPE_UNKNOWN = 0;

        // Host-pool event.
        TYPE_HOST_POOL = 1;
    }

    // Hostname of the host.
    string hostname = 1;

    // Type of event.
    Type type = 2;

    // Details of host-pool event.
    HostPoolEvent hostPoolEvent = 3;
}

/**
 * Event for host-pool change of a host.
 */
message HostPoolEvent {
    // ID of the pool that the host belongs to. If unset, indicates that the
    // host is removed or not part of any pool.
    string pool = 1;
}

// HostPoolInfo describes a host-pool
message HostPoolInfo {
  // Name of the pool. Pool names are unique.
  string name = 1;

  // Hosts that belong to the pool
  repeated string hosts = 2;
}

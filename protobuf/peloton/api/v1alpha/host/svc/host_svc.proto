// This file defines the Host Service in Peloton API

syntax = "proto3";

option go_package = "peloton/api/v1alpha/host/svc";
option java_package = "com.peloton.api.v1alpha.host.svc.pb";

package peloton.api.v1alpha.host.svc;

import "peloton/api/v1alpha/host/host.proto";

// Request message for HostService.QueryHosts method.
message QueryHostsRequest {
    // List of host states to query the hosts.
    // Will return all hosts if the list is empty.
    repeated host.HostState host_states = 1;
}

// Response message for HostService.QueryHosts method.
// Return errors:
message QueryHostsResponse {
    // List of hosts that match the host query criteria.
    repeated host.HostInfo host_infos = 1;
}

// Request message for HostService.StartMaintenance method.
message StartMaintenanceRequest {
    // List of hosts to be put into maintenance
    repeated string hostnames = 1 [deprecated=true];

    // Host to be put into maintenance
    string hostname = 2;
}


// Response message for HostService.StartMaintenance method.
// Return errors:
//   NOT_FOUND:   if the host is not found.
message StartMaintenanceResponse {
    // Host successfully submitted for maintenance
    string hostname = 1;
}

// Request message for HostService.CompleteMaintenance method.
message CompleteMaintenanceRequest {
    // List of hosts put be brought back up
    repeated string hostnames = 1 [deprecated=true];
    // Host to be removed from maintenance and brought back up
    string hostname = 2;
}

// Response message for HostService.CompleteMaintenance method.
// Return errors:
//   NOT_FOUND:   if the host is not found.
message CompleteMaintenanceResponse {
    // Host successfully submitted for maintenance completion
    string hostname = 1;
}

// HostService defines the host related methods such as query hosts, start maintenance,
// complete maintenance etc.
service HostService
{
    // Get hosts which are in one of the specified states
    rpc QueryHosts(QueryHostsRequest) returns (QueryHostsResponse);

    // Start maintenance on the specified hosts
    rpc StartMaintenance(StartMaintenanceRequest) returns (StartMaintenanceResponse);

    // Complete maintenance on the specified hosts
    rpc CompleteMaintenance(CompleteMaintenanceRequest) returns (CompleteMaintenanceResponse);
}
